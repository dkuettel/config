#!/bin/zsh
set -eux -o pipefail

# note:
# this could be both .xinitrc or .xsession
# startx calls .xinitrc and if it doesn't exist
# then it uses system defaults in /etc/X11/Xinit
# and /etc/X11/Xsession and then starts
# ~/.xsession which results in a cleaner setup (eg, dbus)

# note:
# all log files here we recreate, we dont keep old xsession's logs

exec > >(ts '%F %T' >& .log-dwm)
exec 2>&1

# monitor never off
xset -dpms
xset s off
setterm --blank 0 --powerdown 0

redshift -r -v |& ts '%F %T' >& .log-redshift &

# todo/note currently also setting already in /etc/default/keyboard for to have it in the virtual terminal
# not really necessary here anymore, but not sure how to do the dynamic variant
setxkbmap -layout pointluck -variant $(hostname)
xmodmap ~/config/i/keyboard/mods
xset r rate 200 50  # keyboard repeat rate (delay ms, repeats per second)
numlockx on

# todo how to get id, what if different mice or accels needed?
#xinput --set-prop 8 'libinput Accel Speed' 1 || true
#xinput --set-prop 9 'libinput Accel Speed' 1 || true

xsetroot -bg black
xsetroot -solid black
feh --no-fehbg --bg-fill ~/config/i/dwm/5_stripes_landscape.jpg

# high dpi
export GDK_SCALE=2

function status {
    while true; do
        s=' '

        # redshift
        s+=$(awk '
            /Status/ {s=$4}
            /Brightness/ {b=$4}
            END {if (s=="Enabled") print "redshift@" b; else print "redshift off "}
            ' .log-redshift)
        s+=' | '

        # bluetooth
        if bluetoothctl show | grep 'Powered: yes' > /dev/null; then
            count=$(for mac in $(bluetoothctl devices | awk '{print $2}'); do
                if bluetoothctl info $mac | grep 'Connected: yes' > /dev/null; then
                    echo $mac
                fi
            done | wc -l)
            s+="bt @$count"
        else
            s+='bt off'
        fi
        s+=' | '

        # sound
        s+=$(pactl list sinks | awk -v ORS='' '
            /Description/ {print $2}
            /Mute/ {if ($2=="yes") print "#"; else print "="}
            /\tVolume/ {print $5 " "}')
        s+='| '

        # date and time
        s+=$(date '+%F %A %R')
        s+=' '

        xsetroot -name $s

        sleep 5s
    done
}

status >& .log-dwm-status &

dwm

kill %status || true
kill %redshift || true

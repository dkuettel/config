#set -g default-terminal screen-16color # force to use 16 colors only instead of 256 (approximations)
set-option -ga terminal-overrides ",xterm-256color:Tc" # explicitely say true color is enabled
set -g default-terminal "tmux-256color" # todo is termcap correct for this (true color especially)
#set-window-option -g window-status-current-bg cyan

# solarized color theme for tmux
# TODO how to detect dark vs light
#source-file ~/plugins/tmux/tmux-colors-solarized/tmuxcolors-light.conf
#source-file ~/config/tmux-colors-solarized/tmuxcolors-dark.conf
#source-file ~/config/tmux-colors-solarized/tmuxcolors-256.conf

# solarized color theme (invertable)
# bases
# solar  code         :  description
# base03 brightblack  :
# base02 black        :
# base01 brightgreen  :  optional emphasized content
# base00 brightyellow :  body text / default code / primary content
# base0  brightblue   :
# base1  brightcyan   :  comments / secondary content
# base2  white        :  background highlights
# base3  brightwhite  :  background
# accents:
# yellow  yellow
# orange  brightred
# red     red
# magenta magenta
# violet  brightmagenta
# blue    blue
# cyan    cyan
# green   green
#set-option -g status-bg white # base2
#set-option -g status-fg brightyellow # base00
#set-option -g status-attr default
#set-window-option -g window-status-bg white # base2
#set-window-option -g window-status-fg brightyellow # base00
#set-window-option -g window-status-attr default
#set-window-option -g window-status-current-bg brightwhite # base3
#set-window-option -g window-status-current-fg blue # blue
#set-window-option -g window-status-current-attr default
#set-option -g pane-border-fg white # base2
##set-option -g pane-active-border-fg brightcyan # base1
#set-option -g pane-active-border-fg yellow # yellow
#set-option -g message-bg brightwhite # base3
#set-option -g message-fg brightyellow # base00
#set-option -g display-panes-active-colour blue # blue
#set-option -g display-panes-colour yellow # yellow
#set-window-option -g clock-mode-colour blue # blue

#set -g status-interval 2
#set -g status-right 'mem-used #(/home/kuettel/.tmux/mem-used)'
#set -g status-right '"#22T" %H:%M %d-%b-%y mem-used #(/home/kuettel/.tmux/mem-used)'
# the first argument should be the status-interval set earlier
#set -g status-right '#(~/plugins/tmux/tmux-mem-cpu-load/tmux-mem-cpu-load)'
#set -g status-right-length 100
#set -g status-right 'test'

# window and pane start counting from 1
set -g base-index 1
set -g pane-base-index 1

# Length of time to display pane identifiers (prefix + q)
set-option -g display-panes-time 10000

# vim mode in copy mode
set-window-option -g mode-keys vi

# shortcuts for selecting panes
bind-key -n F1 select-pane -t 1
bind-key -n F2 select-pane -t 2
bind-key -n F3 select-pane -t 3
bind-key -n F4 select-pane -t 4
bind-key -n F5 select-pane -t 5
bind-key -n F6 select-pane -t 6
bind-key -n F7 select-pane -t 7
bind-key -n F8 select-pane -t 8
# allow to use F keys when necessary
bind-key F1 send-key F1
bind-key F2 send-key F2
bind-key F3 send-key F3
bind-key F4 send-key F4
bind-key F5 send-key F5
bind-key F6 send-key F6
bind-key F7 send-key F7
bind-key F8 send-key F8

# send F5 key (sometimes useful)
#bind-key F5 send-key F5

# different command prefixes
set-option -g prefix `
bind-key ` send-key ` # send actual `
#set-option -g prefix2 C-b
#set-option -g prefix C-b,C-a,`

# inner and outer tmux
bind-key -n C-q send-key `

# makes esc in vim (and others) react immediately
# does it brake something? escape shortcuts?
set -sg escape-time 0

# time for messages to show on the bottom line
set -g display-time 4000

# renames the terminal to the session name (useful for tabs in a terminal)
set-option -g set-titles on
set-option -g set-titles-string '#S'

# don't allow the tty in a pane/window to rename the window
set-option -g allow-rename off

# rate limit output, tmux won't be unresponsive (gnome-terminal, urxvt seems less likely to block)
#set -g c0-change-trigger 75
#set -g c0-change-interval 50

# powerline
run-shell "powerline-daemon -q"
if-shell 'test -f ~/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' \
	'source ~/anaconda/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' # anaconda python
if-shell 'test -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' \
	'source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' # normal python

# tmux >1.9 or so needs default folder arguments on commands
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

set -g focus-events on # vim with plugin then reacts to focus events

# layouts, see about shortcuts or something
# use select-layout with that string
# layout for vim+python: 9a92,364x94,0,0{265x94,0,0,1,98x94,266,0,14}

# try thicker borders
#set -g pane-border-style bg=brightblue
#set -g pane-active-border-style bg=yellow
set -g pane-border-style fg=blue,bg=brightblack
set -g pane-active-border-style fg=blue,bg=blue

# todo try, not bad
# set -g mouse on

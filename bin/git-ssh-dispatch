#!/bin/zsh
set -eu -o pipefail

# this script roughly acts like openssh
# at least in terms of how git uses it
# I only see it calling ssh in 3 variations:
# > ssh -G git@bitbucket.org (discovery)
# > ssh git@bitbucket.org git-upload-pack 'dkuettel/config.git' (fetch)
# > ssh git@bitbucket.org git-receive-pack 'dkuettel/config.git' (push)
# note: the last two elements (the command) come as one argument $2

# additionally we validate that the author is set as expected
# this only serves as a safety check and doesnt guarantee anything for previous commits

if [[ $1 == '-G' && $# == 2 ]]; then
    ssh $@
    exit
fi

if [[ ! $2 =~ "git-(upload|receive)-pack '(.*)'" && $# == 2 ]]; then
    echo 'unexpected form' $@ >&2
    exit 1
fi

target=$1:$match[2]

case $target in

    (git@github.com:ThingWorx/* | git@github.com:ptc-*/*)
        key=ptc_git_id_rsa
        user="Daniel Kuettel dkuettel@ptc.com"
        ;;

    (*)
        key=id_rsa
        user="Daniel Kuettel dkuettel@gmail.com"
        ;;

esac

if [[ -e .git && -v user ]]; then
    if ! actual="$(git config --get user.name) $(git config --get user.email)"; then
        echo 'no git user is set instead of' $user >&2
        exit 1
    fi
    if [[ $actual != $user ]]; then
        echo 'git user is' $actual 'but expected' $user >&2
        exit 1
    fi
fi

# echo $target '->' $key >&2
ssh -i ~/.ssh/$key $@
